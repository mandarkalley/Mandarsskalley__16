{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b3e20b03-5e6f-4123-9ee6-f2eb47f44380",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'BeautifulSoup'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[1], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mBeautifulSoup\u001b[39;00m\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'BeautifulSoup'"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "\n",
    "import requests\n",
    "import pandas as pd\n",
    "from bs4 import BeautifulSoup\n",
    "\n",
    "class campany:\n",
    "    def init(self,a ):\n",
    "        self.a = a\n",
    "\n",
    "   \n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "87055a85-bea5-44d9-b797-fb5a8e0f1335",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "def main1(b):\n",
    "        \n",
    "        csv_file = []\n",
    "        base_url = b.a\n",
    "        for page in range(1, 125):\n",
    "            r = requests.get(base_url + str(page) + \"#dashboard_notices.html\")\n",
    "            c = r.content\n",
    "            soup = BeautifulSoup(c, 'html.parser')\n",
    "            all_data = soup.find_all(\"div\", {\"class\": \"search-result\"})\n",
    "            #print(all_data)\n",
    "            for item in all_data:  \n",
    "                d = {}\n",
    "\n",
    "                d[\"Tender\"] = item.find(\"a\", {\"class\": [\"govuk-link\", \"search-result-rwh\", \"break-word\"]}).text\n",
    "\n",
    "                d[\"Company\"] = item.find(\"div\", {\"class\": [\"search-result-sub-header\", \"wrap-test\"]}).text\n",
    "\n",
    "                d[\"Procurement\"] = item.find_all(\"div\", {\"class\": \"search-result-entry\"})[0].text.replace(\"Procurement stage\", \" \")\n",
    "\n",
    "                d[\"Notice\"] = item.find_all(\"div\", {\"class\": \"search-result-entry\"})[1].text.replace(\"Notice status\",\" \")\n",
    "\n",
    "                d[\"Location\"] = item.find_all(\"div\", {\"class\": \"search-result-entry\"})[3].text.replace(\"Contract location\", \" \")\n",
    "\n",
    "\n",
    "                try:\n",
    "\n",
    "                    d[\"Closing\"] = item.find_all(\"div\", {\"class\": \"search-result-entry\"})[2].text.replace(\"Closing\",\" \")\n",
    "\n",
    "                except:\n",
    "\n",
    "                    d[\"Closing\"] = \"None\"\n",
    "                try:\n",
    "                    d[\"Value\"] = item.find_all(\"div\", {\"class\": \"search-result-entry\"})[4].text.replace(\"Contract value\", \" \")\n",
    "                except:\n",
    "                    d[\"Value\"] = \"None\"\n",
    "                try:\n",
    "                    d[\"Date\"] = item.find_all(\"div\", {\"class\": \"search-result-entry\"})[5].text.replace(\"Publication date\", \" \")\n",
    "                except:\n",
    "                    d[\"Date\"] = \"None\"\n",
    "                csv_file.append(d)\n",
    "\n",
    "        df=pd.DataFrame(csv_file)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bbb9f789-2df8-4cbf-a66c-9184374b3428",
   "metadata": {},
   "outputs": [],
   "source": [
    "p1 = Person(\"https://www.contractsfinder.service.gov.uk/Search/Results?&page=\")\n",
    "p1.abc()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
